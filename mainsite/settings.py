"""
Django settings for untitled project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6agilz+*6a8y!pkjfpi8537gsrgo8*j7f9u2fram@nab0#t^1d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.0.24', '35.183.186.103', '127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mainsite',
    'users',
    'stocks',
    'django_user_agents',
    'cities_light',
    'payment',
    'secret-admin',
    'subscriptions',
    'favourites',
    'tastypie',
    'api',
    'cart',
    'paypal.standard.ipn',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

# MIDDLEWARE_CLASSES = (
#     # other middlewares...

# )

ROOT_URLCONF = 'mainsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # UserDefined context processor
                'mainsite.context_processors.active_theme',
                'mainsite.context_processors.get_user_avatar'
            ],
        },
    },
]

# Cache backend is optional, but recommended to speed up user agent parsing
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#         'LOCATION': '127.0.0.1:11211',
#     }
# }

# Name of cache backend to cache user agents. If it not specified default
# cache alias will be used. Set to `None` to disable caching.
USER_AGENTS_CACHE = 'default'

WSGI_APPLICATION = 'mainsite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    # testing
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # },

    # local postgres dev
    'default': {
       'ENGINE': 'django.db.backends.postgresql_psycopg2',
       # 'ENGINE': 'django.db.backends.postgresql',
       'NAME': 'dj_specto',
       'USER': 'postgres',
       'PASSWORD': 'admin1987',
       'HOST': '127.0.0.1',
       'PORT': '5432',
    }
    
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'dev',
    #     'USER': 'yeksaalbad',
    #     'PASSWORD': 'spectations%d,100',
    #     'HOST': 'specto-db-2018100505a1.cj8m1tysjmhh.ca-central-1.rds.amazonaws.com',
    #     'PORT': '5432',
    # }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

DEFAULT_INDEX_TABLESPACE = ""

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Media
MAX_UPLOAD_SIZE = "5242880"
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Payments`
PAYMENT_HOST = 'localhost:8000'
PAYMENT_USES_SSL = False
PAYMENT_MODEL = 'payment.Payment'
PAYMENT_VARIANTS = {
    'default': ('payments.dummy.DummyProvider', {})}

# Custom Auth Config
AUTH_USER_MODEL = 'mainsite.User'
C_USER_EMAIL_VERIFICATION_STATUS = True
C_EMAIL_VERIFICATION_TOKEN_EXPIRY_HOURS = 24
C_EMAIL_VERIFICATION_SUBJECT = 'New account registration confirmation'
C_EMAIL_VERIFICATION_SENDER = 'your email'
C_SUBS_EXPIRE_SUBJECT = 'Hi, your subscription will be expired soon!'

C_USER_PASSWORD_RECOVERY_STATUS = True
C_USER_PASSWORD_RECOVERY_EMAIL_SUBJECT = 'Request for password recovery'
C_PASSWORD_RECOVERY_TOKEN_EXPIRY_HOURS = 24
C_PASSWORD_RECOVERY_SENDER = 'your email'

# storing email into file
EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
EMAIL_FILE_PATH = os.path.join(BASE_DIR, 'tmp/')

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'host address of email server'
# EMAIL_PORT = 'port'
# EMAIL_HOST_USER = 'your email of email address of your server'
# EMAIL_HOST_PASSWORD = 'password'
# EMAIL_USE_TLS = True

# Email Config
# EMAIL_HOST = 'localhost'
# EMAIL_PORT = 25
# EMAIL_HOST_USER = 'somecuuluser'
# EMAIL_HOST_PASSWORD = 'somepassword'
# EMAIL_USE_TLS = False
# EMAIL_USE_SSL = False

# AUTHENTICATION_BACKENDS = (
#     'users.backend.EmailOrUsernameModelBackend',
#     'django.contrib.auth.backends.ModelBackend',
# )

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'index'
ANONYMOUS_REDIRECT_URL = 'index'
ADMIN_LOGIN_URL = 'admin.login'
ADMIN_LOGIN_REDIRECT_URL = 'admin.index'
ADMIN_ANONYMOUS_REDIRECT_URL = 'admin.index'

# Custom-User related config
C_USER_IMAGE_PATH = 'avatars/'
C_USER_IMAGE_NOT_FOUND = MEDIA_URL + C_USER_IMAGE_PATH + 'no_user_thumb.png'

# Extra security layer(Logging user IP&User agent details)
#  - Logging just the user login requests(Recommended)
C_IS_ENABLED_LOGIN_REQUEST_LOGGING = True

# Stock Market API
C_STOCK_API_ALPHAVANTAGE_KEY = 'OI7NRYN7JREO17KA'

"""
 Stock API(Realtime)
  iextrading.com
  URL: https://api.iextrading.com/1.0/
"""
C_API_STOCK___BASE_URL = "https://api.iextrading.com/1.0/"

"""
Payments
"""
# 1 Paypal
PAYPAL_TEST = True

"""
- Add some settings -
Log in to your sandbox account and get your API keys plus your merchant ID.

"""
BRAINTREE_PRODUCTION = False  # We'll need this later to switch between the sandbox and live account
BRAINTREE_MERCHANT_ID = "b6qf469y8j6gbvdm"
BRAINTREE_PUBLIC_KEY = "gt5389p8hh9kmz9t"
BRAINTREE_PRIVATE_KEY = "27aade3df80a7ba3204abb79c4aa7d95"

LOW_COLOR = '#FFA8A8'
HIGH_COLOR = '#FFEEA8'
CLOSE_COLOR = '#B9FFA8'
ACCURACY_COLOR = '#716aca'

EXPIRED_DAY = 95
